package controller;
import java.io.IOException;
import java.util.List;

import service.ResourceShareService;
import cn.itcast.servlet.BaseServlet;
import cn.itcast.commons.CommonUtils;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletContext;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import dto.ResourceShareDto;
import entity.Account;
import entity.Class;
import entity.ResourceShare;
import entity.Community;

@WebServlet(name="ResourceShareController",urlPatterns={"/ResourceShareController"})
public class ResourceShareController extends BaseServlet{
	
	private static final long serialVersionUID = 1L;
	ResourceShareService resService = new ResourceShareService();
	
	
	public String newResourceShare(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException{
		ResourceShare res = CommonUtils.toBean(req.getParameterMap(),ResourceShare.class);
		try{
			resService.addResourceShare(res);
		}catch(Exception e){
			e.printStackTrace();
		}
		 return this.listCommunityResourceShare(req, resp);
	}
	
	/**
	 * 根据社团Id查找该社团的资源共享
	 * 社团管理员
	 * @param req
	 * @param resp
	 * @return
	 * @throws IOException 
	 * @throws ServletException 
	 */
	public String listCommunityResourceShare(HttpServletRequest req, HttpServletResponse resp){
		HttpSession session = req.getSession();
		try{
			int communityId = ((Community)session.getAttribute("community")).getId();
			List<ResourceShare> resourceShareList = resService.queryByCommunity(communityId);
			req.setAttribute("resourceShareList", resourceShareList);
		}catch(Exception e){
			e.printStackTrace();
		}
		return "f:backpages/share/share.jsp";
	}
	
	/**
	 * 查看所有的资源共享
	 * 社联管理员
	 * @param req
	 * @param resp
	 * @return
	 * @throws IOException 
	 * @throws ServletException 
	 */
	public String listCommunityResourceShare2(HttpServletRequest req, HttpServletResponse resp){
		try{
			List<ResourceShare> resourceShareList = resService.selectAll();
			req.setAttribute("resourceShareList", resourceShareList);
		}catch(Exception e){
			e.printStackTrace();
		}
		return "f:backpages/share/share.jsp";
	}
	
	/**
	 * 查看详情
	 * @param req
	 * @param resp
	 * @return
	 */
	public String detailsView(HttpServletRequest req, HttpServletResponse resp){
		int resourceShareId =Integer.parseInt(req.getParameter("id"));
		try{
			ResourceShare resourceShare = resService.queryById(resourceShareId);
			req.setAttribute("resourceShare", resourceShare);
		}catch(Exception e){
			e.printStackTrace();
		}
		return "f:backpages/share/view.jsp";
	}
	
	/**
	 * 去修改的页面
	 * @param req
	 * @param resp
	 * @return
	 */
	public String toUpdate(HttpServletRequest req, HttpServletResponse resp){
		int resourceShareId =Integer.parseInt(req.getParameter("id"));
		try{
			ResourceShare resourceShare = resService.queryById(resourceShareId);
			req.setAttribute("resourceShare", resourceShare);
		}catch(Exception e){
			e.printStackTrace();
		}
		return "f:backpages/share/change.jsp";
	}
	
	/**
	 * 修改一条资源共享
	 * @param req
	 * @param resp
	 * @return
	 */
	public String updateResourceShare(HttpServletRequest req, HttpServletResponse resp){
		ResourceShare res = CommonUtils.toBean(req.getParameterMap(),ResourceShare.class);
		HttpSession session = req.getSession();
		Account account = (Account)session.getAttribute("account");
		try{
			resService.updateById(res);
		}catch(Exception e){
			e.printStackTrace();
		}
		if("社团管理员".equals(account.getRole())){
			return this.listCommunityResourceShare(req, resp);
		}else{
			// 超级管理员和社联管理员看全部的数据
			return this.listCommunityResourceShare2(req, resp);	
		}
	}
	
	/**
	 * 根据Id删除一条资源共享
	 * @param req
	 * @param resp
	 * @return
	 */
	public String deleteById(HttpServletRequest req, HttpServletResponse resp){
		int resourceShareId =Integer.parseInt(req.getParameter("id"));
		HttpSession session = req.getSession();
		Account account = (Account)session.getAttribute("account");
		try{
			resService.deleteById(resourceShareId);
		}catch(Exception e){
			e.printStackTrace();
		}
		if("社团管理员".equals(account.getRole())){
			return this.listCommunityResourceShare(req, resp);
		}else{
			// 超级管理员和社联管理员看全部的数据
			return this.listCommunityResourceShare2(req, resp);	
		}
	}
	
	/**
	 * 审核通过或者不通过 
	 * @param req
	 * @param resp
	 * @return
	 */
	public String passOrNotPass(HttpServletRequest req, HttpServletResponse resp){
		int id =Integer.parseInt(req.getParameter("id"));
		String type = req.getParameter("type");
		try{
			resService.updateTypeById(id, type);
		}catch(Exception e){
			e.printStackTrace();
		}
		return this.listCommunityResourceShare2(req, resp);	
	}
	
	public String listByType(HttpServletRequest req, HttpServletResponse resp){
		try{
			List<ResourceShare> resourceShareList = resService.queryByType("审核通过");
			req.setAttribute("resourceShareList", resourceShareList);
		}catch(Exception e){
			e.printStackTrace();
		}
		return "f:frontpages/pages/share/share_index.jsp";
	}
}
