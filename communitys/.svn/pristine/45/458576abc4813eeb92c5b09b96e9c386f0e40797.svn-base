package util;

import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;

public class DateUtil {
	
	/**
	 * java.util.Date 转化�?java.sql.Date
	 * @param date
	 * @return
	 * @throws Exception 
	 */
	public static java.sql.Date getSqlDate(Date date){
		return new java.sql.Date(date.getTime());
	}
	
	/**
	 * 格式化日期时�?
	 * @param date
	 * @return
	 */
	public static String formatDateTime(Date date) {
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
		return sdf.format(date).toString();
	}
	
	public static Date StringToDate(String time) throws ParseException {
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
		if("".equals(time)){
			return sdf.parse((new Date()).toString());
		}
			return sdf.parse(time);

	}
	
	public static Date StringToDateYM(String time) throws ParseException {
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM");
		if("".equals(time)){
			return sdf.parse((new Date()).toString());
		}
			return sdf.parse(time);

	}
	
	/**
	 * 格式化日�?
	 * @param date
	 * @return
	 */
	public static String formatDate(Date date) {
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
		return sdf.format(date).toString();
	}

	
	public static String getDateForIndex(){
		Date date = new Date();
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy年MM月dd�?");
		return sdf.format(date).toString();
		
	}
	
	/**
	 * 按照yyyy-MM-dd hh:mm这个格式的时间与当前时间比大小
	 * >0说明比现在的时间靠后
	 * <0说明比现在的时间靠前
	 * =0说明跟现在的时间相等
	 * @param date
	 * @return
	 */
	public static int compareNowDate(String date){
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm");
		try{
			 Date d1 = sdf.parse(date);
			 Date d2 = sdf.parse(sdf.format(new Date()));
			 if(d1.getTime() > d2.getTime()){
				 return 1;
			 }else if(d1.getTime() < d2.getTime()){
				 return -1;
			 }else{
				 return 0;
			 }
		 }catch(Exception e){
			 e.printStackTrace();
		 }
		return 0;
		 
	}
	
	
}
