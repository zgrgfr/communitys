package service;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

import org.apache.ibatis.session.SqlSession;

import util.MybatisUtil;
import dao.ClassDao;
import dto.ClassDto;
import entity.Class;
import entity.ClassEnter;
import service.ClassEnterService;

/**
 * 课程的Service
 * @author shanjizhong
 *
 */
public class ClassService {
	SqlSession sqlSession = MybatisUtil.getSqlSession(true);
	ClassDao classDao = sqlSession.getMapper(ClassDao.class);
	
	 ClassEnterService classEnterService = new ClassEnterService();;
	/**
	 * 添加一个课程
	 * @param class
	 * @throws Exception
	 */
	public void addClass(Class Class) throws Exception{
		classDao.addClass(Class);
	}
	
	/**
	 * 根据Id删除课程
	 * @param id
	 * @throws Exception
	 */
	public void deleteById(int id) throws Exception{
		classDao.deleteById(id);
	}
	
	/**
	 * 根据Id查找课程
	 * @param id
	 * @return
	 * @throws Exception
	 */
	public Class queryById(int id) throws Exception{
		sqlSession.clearCache();
		return classDao.queryById(id);
	}
	
	/**
	 * 根据type找到相应的课程Dto集合
	 * @param type
	 * @return
	 * @throws Exception
	 */
	public List<ClassDto> queryByTypeAndclassType(String type,String classType) throws Exception{
		sqlSession.clearCache();
		List<Class> classList =  classDao.queryByTypeAndclassType(type,classType);
		List<ClassDto> classDtoList = new ArrayList<ClassDto>();
		
		for(Class cla : classList){
			ClassDto classDto = new ClassDto();
			List<ClassEnter> classEnterList = Collections.emptyList();
			classEnterList = classEnterService.queryByclassId(cla.getId());
			classDto.setCla(cla);
			classDto.setClassEnter(classEnterList);
			classDto.setNumber(classEnterList.size());
			classDtoList.add(classDto);
		}
		return classDtoList;
	}
	
	/**
	 * 根据Id改变某个课程的审核状态
	 * @param type
	 * @param id
	 * @throws Exception
	 */
	public void updateTypeById(String type, int id) throws Exception{
		classDao.updateTypeById(id, type);
	}
	
	/**
	 * 根据ID修改课程
	 * @param id
	 * @param Class
	 * @throws Exception
	 */
	public void updateById(int id,Class Class)throws Exception{
		classDao.updateById(Class);
	}
	
	/**
	 * 根据社团Id找到上传的精品课程
	 * @param communityId
	 * @return
	 * @throws Exception
	 */
	public List<Class> queryByCommunityId(int communityId) throws Exception{
		sqlSession.clearCache();
		return classDao.queryByCommunityId(communityId);
	}
	
	/**
	 * 查询所有的精品课程
	 * @return
	 * @throws Exception
	 */
	public List<Class> selectAll() throws Exception{
		sqlSession.clearCache();
		return classDao.selectAll();
	}
}
