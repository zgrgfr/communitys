package controller;
import java.io.IOException;
import java.io.PrintWriter;

import service.CommunityService;
import service.CommunityShowService;
import cn.itcast.servlet.BaseServlet;
import cn.itcast.commons.CommonUtils;





import javax.servlet.ServletException;
import javax.servlet.annotation.MultipartConfig;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import javax.servlet.jsp.JspFactory;
import javax.servlet.jsp.JspWriter;
import javax.servlet.jsp.PageContext;

import java.io.File;
import java.util.Collection;




import entity.Community;
import entity.CommunityShow;
import util.IPTimeStamp;

import javax.servlet.http.Part;
import javax.swing.JOptionPane;
/**
 * 社团展示的Controller 
 * @author 郭丰瑞
 *
 */
@WebServlet(name="CommunityShowController",urlPatterns={"/CommunityShowController"})
@MultipartConfig
public class CommunityShowController extends BaseServlet{
	private static final long serialVersionUID = 1L;
	CommunityShowService communityShowService = new CommunityShowService();
	
	public String newCommunityShow(HttpServletRequest req, HttpServletResponse resp)  {
			HttpSession session = req.getSession();
			IPTimeStamp its = new IPTimeStamp(req.getRemoteAddr());
			 
	    	try{
	    		// 使用servlet3.0实现文件的上传
	    		Part part = req.getPart("file");
	    		String cd = part.getHeader("Content-Disposition");  
	            String[] cds = cd.split(";");  
	            String filename = cds[2].substring(cds[2].indexOf("=")+1).substring(cds[2].lastIndexOf("//")+1).replace("\"", "");  
	            String ext = filename.substring(filename.lastIndexOf(".")+1);
	            
	            String logo = its.getIPTimeStampRand()+"."+ext;
	            String campus = req.getParameter("campus"); 
				String grade = req.getParameter("grade");
				String communityType = req.getParameter("community_type");
				int communityId = ((Community)session.getAttribute("community")).getId();
				String type = req.getParameter("type");
				CommunityShow communityShow = new CommunityShow(campus,grade,communityType,logo,communityId,type);
				if(communityShowService.queryByCommunityId(communityId) == null){
					communityShowService.addCommunityShow(communityShow);
					part.write(getServletContext().getRealPath("/backpages/image") + "/" + logo);
				}else{
					req.setAttribute("message", "该社团已存在社团展示，不可重复添加");
					return "f:backpages/club_show/add.jsp";
				}
	    	}catch(Exception e){
			e.printStackTrace();
		}
	    return this.listCommunityShow(req, resp);
	}
	
	/**
	 * 查看该社团的社团展示
	 * 社团管理员
	 * @param req
	 * @param resp
	 * @return
	 */
	public String listCommunityShow(HttpServletRequest req, HttpServletResponse resp){
		HttpSession session = req.getSession();
		try{
			int communityId = ((Community)session.getAttribute("community")).getId();
			CommunityShow communityShow = communityShowService.queryByCommunityId(communityId);
			req.setAttribute("communityShow", communityShow);
		}catch(Exception e){
			e.printStackTrace();
		}
		return "f:backpages/club_show/show.jsp";
	}
	
	/**
	 * 根据Id删除相应的社团展示
	 * @param req
	 * @param resp
	 * @return
	 */
	public String deleteById(HttpServletRequest req, HttpServletResponse resp){
		int id =Integer.parseInt(req.getParameter("id"));
		try{
			if(communityShowService.queryById(id).getLogo() != null){
				String delPath = req.getRealPath("")+"\\backpages\\image\\"+communityShowService.queryById(id).getLogo();
	        	communityShowService.deleteFile(delPath);
			}
			communityShowService.deleteById(id);
		}catch(Exception e){
			e.printStackTrace();
		}
		return this.listCommunityShow(req, resp);
	}
	
	/**
	 * 跳转到修改的页面
	 * @param req
	 * @param resp
	 * @return
	 */
	public String toUpdate(HttpServletRequest req, HttpServletResponse resp){
		int id =Integer.parseInt(req.getParameter("id"));
		try{
			CommunityShow communityShow = communityShowService.queryById(id);
			req.setAttribute("communityShow", communityShow);
		}catch(Exception e){
			e.printStackTrace();
		}
		return "f:backpages/club_show/change.jsp";
	}
	
	public String updateCommunityShow(HttpServletRequest req, HttpServletResponse resp){
		IPTimeStamp its = new IPTimeStamp(req.getRemoteAddr());
		try{
    		// 使用servlet3.0实现文件的上传
    		String logo = req.getParameter("logo");
			Part part = req.getPart("file");
    		String cd = part.getHeader("Content-Disposition");  
            String[] cds = cd.split(";");  
            String filename = cds[2].substring(cds[2].indexOf("=")+1).substring(cds[2].lastIndexOf("//")+1).replace("\"", "");  
            String ext = filename.substring(filename.lastIndexOf(".")+1);
            if(!"".equals(filename)){
            	// 删除原来的logo
            	String delPath = req.getRealPath("")+"\\backpages\\image\\"+logo;
            	communityShowService.deleteFile(delPath);
            	logo = its.getIPTimeStampRand()+"."+ext;
            }
            int id = Integer.parseInt(req.getParameter("id"));
            String campus = req.getParameter("campus"); 
			String grade = req.getParameter("grade");
			String communityType = req.getParameter("communityType");
			int communityId = Integer.parseInt(req.getParameter("communityId"));
			String type = req.getParameter("type");
			CommunityShow communityShow = new CommunityShow(id,campus,grade,communityType,logo,communityId,type);
			communityShowService.updateById(communityShow);
			if(filename != null && (!"".equals(filename))){
				// 存储新的logo
				part.write(getServletContext().getRealPath("/backpages/image") + "/" + logo);
				
			}	
    	}catch(Exception e){
		e.printStackTrace();
	}
    return this.listCommunityShow(req, resp);
	}
	
	public String test(HttpServletRequest req, HttpServletResponse resp){
		System.out.println(req.getParameter("grade"));
		return "";
	}
}
