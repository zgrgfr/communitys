package controller;
import java.util.ArrayList;
import java.util.List;

import service.AccountService;
import service.ActivityApplyService;
import service.ClassEnterService;
import service.ClassService;
import cn.itcast.servlet.BaseServlet;
import cn.itcast.commons.CommonUtils;

import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;










import dto.ClassDto;
import entity.ActivityApply;
import entity.Account;
import entity.ClassEnter;

/**
 * 物品借用
 * @author guofr
 * 
 *
 */
@WebServlet(name="AccountController",urlPatterns={"/AccountController"})
public class AccountController extends BaseServlet{
	private static final long serialVersionUID = 1L;
	private AccountService accountService = new AccountService();
	
	/**
	 * 添加一条账户信息
	 * @param req
	 * @param resp
	 * @return
	 */
	public String newAccount(HttpServletRequest req, HttpServletResponse resp){
		Account account = CommonUtils.toBean(req.getParameterMap(), Account.class);
		try{
			accountService.addAccount(account);
		}catch(Exception e){
			e.printStackTrace();
		}
		return "";
	}
	
	/**
	 * 查看所有的账号信息
	 * 超级管理员
	 * 社联管理员
	 * @param req
	 * @param resp
	 * @return
	 */
	public String listAccount(HttpServletRequest req,HttpServletResponse resp){
		try{
			List<Account> accountList = accountService.selectAll();
			req.setAttribute("accountList", accountList);
		}catch(Exception e){
			e.printStackTrace();
		}
		return "f:backpages/account/account.jsp";
	}
	
	/**
	 * 审核通过或者不通过
	 * @param req
	 * @param resp
	 * @return
	 */
	public String passOrNotPass(HttpServletRequest req, HttpServletResponse resp){
		String type = req.getParameter("type");
		int id = Integer.parseInt(req.getParameter("id"));
		try{
			accountService.updateTypeById(type, id);
		}catch(Exception e){
			e.printStackTrace();
		}
		return this.listAccount(req, resp);
	}
	
	/**
	 * 授权场地申请或者不授权
	 * @param req
	 * @param resp
	 * @return
	 */
	public String placeSetOrNotSetRole(HttpServletRequest req, HttpServletResponse resp){
		String placeRole = req.getParameter("placeRole");
		int id = Integer.parseInt(req.getParameter("id"));
		try{
			accountService.updatePlaceRoleById(id, placeRole);
		}catch(Exception e){
			e.printStackTrace();
		}
		return this.listAccount(req, resp);
	}
}
